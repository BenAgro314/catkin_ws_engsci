<?xml version="1.0"?>
<launch>
	<arg name="world" default="$(find offboard_py)/worlds/myhal_sim.world"/>
	<arg name="sdf" default="$(find offboard_py)/models/iris_with_imx/iris_with_imx.sdf"/>
	<!--arg name="sdf" default="$(find offboard_py)/models/iris/iris.sdf"/-->

	<node pkg="tf" type="static_transform_publisher" name="tf_baseLink_cameraPose"
        args="0 0 0 0 1.5708 0 base_link camera_pose_frame 1000"/>
	<!--arg name="sdf" default="$(find offboard_py)/models/iris_with_realsense/iris_with_realsense.sdf"/-->
	<!--arg name="vehicle" default="iris"/-->
	<!-- Include the MAVROS node with SITL and Gazebo -->
	<!--include file="$(find px4)/launch/mavros_posix_sitl.launch">
		<arg name="world" value="$(arg world)"/>	
		<arg name="sdf" value="$(arg sdf)"/>	
		<arg name="x" value="0.3"/>
		<arg name="y" value="0.1"/>
		<arg name="z" value="0"/>
		<arg name="Y" default="-1.57"/>
	</include-->

    <!-- MAVROS posix SITL environment launch script -->
    <!-- launches MAVROS, PX4 SITL, Gazebo environment, and spawns vehicle -->
    <!-- vehicle pose -->
    <arg name="x" default="0.3"/>
    <arg name="y" default="0.1"/>
    <arg name="z" default="0"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="-1.57"/>
    <!-- vehicle model and world -->
    <arg name="est" default="ekf2"/>
    <arg name="vehicle" default="iris"/>

    <!-- gazebo configs -->
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="respawn_gazebo" default="false"/>
    <!-- MAVROS configs -->
    <arg name="fcu_url" default="udp://:14540@localhost:14557"/>
    <!-- PX4 configs -->
    <arg name="interactive" default="true"/>
    <!-- PX4 SITL and Gazebo -->
    <include file="$(find px4)/launch/posix_sitl.launch">
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="z" value="$(arg z)"/>
        <arg name="R" value="$(arg R)"/>
        <arg name="P" value="$(arg P)"/>
        <arg name="Y" value="$(arg Y)"/>
        <arg name="world" value="$(arg world)"/>
        <arg name="vehicle" value="$(arg vehicle)"/>
        <arg name="sdf" value="$(arg sdf)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="interactive" value="$(arg interactive)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="respawn_gazebo" value="$(arg respawn_gazebo)"/>
    </include>
    <!-- MAVROS -->

	<arg name="tgt_system" default="1" />
	<arg name="tgt_component" default="1" />
	<arg name="log_output" default="screen" />
	<arg name="fcu_protocol" default="v2.0" />
	<arg name="respawn_mavros" default="false" />
	<arg name="gcs_url" default="" />

	<include file="$(find mavros)/launch/node.launch">
		<arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
		<arg name="config_yaml" value="$(find offboard_py)/resource/px4_config.yaml" />

		<arg name="fcu_url" value="$(arg fcu_url)" />
		<arg name="gcs_url" value="$(arg gcs_url)" />
		<arg name="tgt_system" value="$(arg tgt_system)" />
		<arg name="tgt_component" value="$(arg tgt_component)" />
		<arg name="log_output" value="$(arg log_output)" />
		<arg name="fcu_protocol" value="$(arg fcu_protocol)" />
		<arg name="respawn_mavros" default="$(arg respawn_mavros)" />
	</include>


	<!--param name="robot_description" textfile="$(find offboard_py)/models/iris/iris.sdf"/-->

	<!-- Our node to control the drone -->
	<node pkg="offboard_py" type="rob498_drone_v2.py" name="rob498_drone_py" required="true" output="screen" />

	<!-- rviz -->
	<node type="rviz" name="rviz" pkg="rviz" args="-d $(find offboard_py)/rviz/offboard.rviz" />

	<!--node name="pose_to_tf" pkg="offboard_py" type="tf_pub.py" output="screen"/-->
	<node name="obstacle_detector" pkg="offboard_py" type="obstacle_detection.py" output="screen"/>
	<!--node name="mapping_node" pkg="t265_stereo" type="mapping.py" output="screen"/-->

	<!-- Publish a static transformation between base_link and camera_odom_frame -->
	<node pkg="tf" type="static_transform_publisher" name="base_link_to_imx219"
			args="0 0 0 0 1.5707 1.5707 base_link imx219 1000"/>

	<node name="tracker" pkg="offboard_py" type="tracker.py" output="screen"/>
	<!--node name="local_planner" pkg="offboard_py" type="local_planner.py" output="screen"/-->
</launch>